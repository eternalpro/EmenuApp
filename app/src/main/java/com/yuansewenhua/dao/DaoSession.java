package com.yuansewenhua.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.yuansewenhua.dao.Foodstype;
import com.yuansewenhua.dao.Foods;
import com.yuansewenhua.dao.Drinkstype;
import com.yuansewenhua.dao.Drinks;
import com.yuansewenhua.dao.Porelationships;

import com.yuansewenhua.dao.FoodstypeDao;
import com.yuansewenhua.dao.FoodsDao;
import com.yuansewenhua.dao.DrinkstypeDao;
import com.yuansewenhua.dao.DrinksDao;
import com.yuansewenhua.dao.PorelationshipsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig foodstypeDaoConfig;
    private final DaoConfig foodsDaoConfig;
    private final DaoConfig drinkstypeDaoConfig;
    private final DaoConfig drinksDaoConfig;
    private final DaoConfig porelationshipsDaoConfig;

    private final FoodstypeDao foodstypeDao;
    private final FoodsDao foodsDao;
    private final DrinkstypeDao drinkstypeDao;
    private final DrinksDao drinksDao;
    private final PorelationshipsDao porelationshipsDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        foodstypeDaoConfig = daoConfigMap.get(FoodstypeDao.class).clone();
        foodstypeDaoConfig.initIdentityScope(type);

        foodsDaoConfig = daoConfigMap.get(FoodsDao.class).clone();
        foodsDaoConfig.initIdentityScope(type);

        drinkstypeDaoConfig = daoConfigMap.get(DrinkstypeDao.class).clone();
        drinkstypeDaoConfig.initIdentityScope(type);

        drinksDaoConfig = daoConfigMap.get(DrinksDao.class).clone();
        drinksDaoConfig.initIdentityScope(type);

        porelationshipsDaoConfig = daoConfigMap.get(PorelationshipsDao.class).clone();
        porelationshipsDaoConfig.initIdentityScope(type);

        foodstypeDao = new FoodstypeDao(foodstypeDaoConfig, this);
        foodsDao = new FoodsDao(foodsDaoConfig, this);
        drinkstypeDao = new DrinkstypeDao(drinkstypeDaoConfig, this);
        drinksDao = new DrinksDao(drinksDaoConfig, this);
        porelationshipsDao = new PorelationshipsDao(porelationshipsDaoConfig, this);

        registerDao(Foodstype.class, foodstypeDao);
        registerDao(Foods.class, foodsDao);
        registerDao(Drinkstype.class, drinkstypeDao);
        registerDao(Drinks.class, drinksDao);
        registerDao(Porelationships.class, porelationshipsDao);
    }
    
    public void clear() {
        foodstypeDaoConfig.getIdentityScope().clear();
        foodsDaoConfig.getIdentityScope().clear();
        drinkstypeDaoConfig.getIdentityScope().clear();
        drinksDaoConfig.getIdentityScope().clear();
        porelationshipsDaoConfig.getIdentityScope().clear();
    }

    public FoodstypeDao getFoodstypeDao() {
        return foodstypeDao;
    }

    public FoodsDao getFoodsDao() {
        return foodsDao;
    }

    public DrinkstypeDao getDrinkstypeDao() {
        return drinkstypeDao;
    }

    public DrinksDao getDrinksDao() {
        return drinksDao;
    }

    public PorelationshipsDao getPorelationshipsDao() {
        return porelationshipsDao;
    }

}
